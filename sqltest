CREATE PROCEDURE PS_LIS_RUL
	(
		@START_AFTER int,
		@PAGING_SIZE int,
		@PARTIAL_RUL_LABEL VARCHAR(300),
        @RUL_STATE int ---0 : Inactif , 1 : Actif, 2 : All 
	)
AS
BEGIN
	SET NOCOUNT ON;

	--Renvoie le nombre max d'occurence pour les filtres afin de g√©rer la pagination. 
	SELECT COUNT(1) AS MAX_RESULT FROM RUL AS R WHERE (@RUL_STATE = 2 OR R.ACF = @RUL_STATE) AND Cast(R.LIB as NVarchar(300)) like '%'+@PARTIAL_RUL_LABEL+'%';

	SELECT
	R.IDE AS Id , R.LIB as Libelle , R.PAT as Pattern, R.ACF as IsActif ,R.PID_CRE as Creator,  COUNT(RU.IDE) AS CountUsage, COUNT(RX.IDE) AS CountException FROM RUL AS R
	LEFT OUTER JOIN RUL_UTT AS RU  ON R.IDE = RU.RUL_IDE
	LEFT OUTER JOIN RUL_XPT AS RX ON R.IDE = RX.RUL_IDE
	WHERE 
	(@RUL_STATE = 2 OR R.ACF = @RUL_STATE) AND Cast(R.LIB as NVarchar(300)) like '%'+@PARTIAL_RUL_LABEL+'%'
	GROUP BY R.IDE , R.LIB, R.PAT, R.ACF, R.PID_CRE
	ORDER BY R.IDE ASC
	OFFSET @START_AFTER ROWS FETCH NEXT @PAGING_SIZE ROWS ONLY;
END
GO
